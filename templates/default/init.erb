#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start metricproxy
# Description:       Enable metricproxy provided by daemon.
### END INIT INFO

dir="<%= @directory %>"
user="<%= @user %>"
configfile="<%= @config_file %>"
logdir="<%= @log_dir %>"
binary="<%= @directory %>/metricproxy"

name=$(basename "$0")
pid_file="<%= @pid_file %>"
stdout_log="<%= @log_dir %>/stdout.log"
stderr_log="<%= @log_dir %>/stderr.log"

# https://github.com/WASdev/ci.chef.wlp/issues/9
if [ "$1" != "locations" ]; then
  if [ "$(id -un)" != "$user" ]; then
    exec su - $user -- "$0" "$@"
  fi
fi

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps "$(get_pid)" > /dev/null 2>&1
}

case "$1" in
    start)
    if [ ! -f $binary ]; then
        echo "$name not installed.  No such file $binary"
       exit 1
    fi
    if [ ! -f $configfile ]; then
        echo "Unable to find config file $configfile"
        exit 1
    fi
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        if [ ! -d "$logdir" ]; then
            mkdir -p $logdir
        fi
  if [ ! -e "$pid_file" ]; then
            touch "$pid_file" > /dev/null 2> /dev/null
        fi
        if [ ! -w "$pid_file" ]; then
            echo "Unable to start proxy: pid file $pid_file is not writable"
            exit 1
        fi
        nohup "$binary" "-configfile" "$configfile" "-logdir" "$logdir" > "$stdout_log" 2> "$stderr_log" &
        echo "$!" > "$pid_file"
        sleep 1 # Give it time to try to open ports and connect
        if ! is_running; then
            echo "Unable to start, see $stdout_log"
            exit 1
        fi
        echo "Started $name"
    fi
    ;;
    stop)
    if is_running; then
        echo "Stopping $name.."
        kill "$(get_pid)"
        for _ in 1 2 3 4 5 6 7 8 9 10
        do
            if ! is_running; then
                break
            fi

            echo "."
            sleep 1
        done

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            rm -f "$pid_file"
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running on PID $(get_pid)"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    locations)
    echo "Install dir:   $dir"
    echo "Run as:        $user"
    echo "Config file:   $configfile"
    echo "PID file:      $pid_file"
    echo "Stdout log:    $stdout_log"
    echo "Stderr log:    $stderr_log"
    echo "Binary:        $binary"
    echo "Log directory: $logdir"
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status|locations}"
    exit 1
    ;;
esac

exit 0
